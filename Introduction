Java is a high level language.

It is a portable language which can be run on any system as long as the system has JRE(Java runtime Environment).
Scanner is also a non primitive data type in java .
1st line of the code is the package name in which we are writing the code.
After writing the java source code when the compiler gets to compile it, it would convert it to byte code(.class) which every system would understand.

Some part of the java code are stored in the form of stack and some are stored in a heap .


////Function////
    That part of the code to which we call to perform the work.
Function is the block of code which takes an input ,perform an operation and produces an output .
The syntax of a function is as given :
        returnType functionName( type arg1, type arg2 ..){}
returnType can be any data type like int, string, float, or void .

public and static  keywords which we generally write before the main function are objects .

functionName can be anything except the keywords .
arguments are also called inputs . 

Function name are also known as identifiers and we can write it in very formats :
        camelCase
        snake_case
        lowercase
To get out of a function we need to write a return keyword at the last of the function as the return type of the function , if the function is of int type then it would return 1 .


**** What happens in memory ? ****
Functions inside a memory are saved as the form of stack . 
The first function that saved(stack frame) in the memory stack is the main function .
After that whatever function the main function will be calling will be stacked over the main function . 
If the new function called by the main function returns some value to the main function it will be erased from the memory stack .
After the main function returns some value it will also get erased from the memory .

The main difference between functions and methods are that methods are called through objects of the class and functions are called directly .

////Class////
    It is a large entity in which we can write many function.
Among the classes the function named main() will be executed at the very first.
All the codes in java are written within a class, and class name and file name would be same .

Extention for a java file is .java .
Comments in java single line comment is written after //  and for multiline comment /* */.

To print something in java we write :
    System.out.println("Hello World");
We can also use print here the only difference is that if we use println there would be an extra new line space just the same as when we use \n it would give you an extra line and if we use print there wouldn't .

**** If we use [sout and then tab] it would give the output line, and you don't have to wirte the whole line again and again .****

If we need to store something in a temporary memory then we use variables.
Just like C language we need to specify the data type of a variable as what we are storing in that variable.
We can assign the value a variable have to another variable.
Java data types:
    Primitive - int, float, long int, byte, char, boolean, double (length/capacity is fixed -128 to 127)
    Non primitive - String, array, class, object, interface (length/capacity is not fixed)

Conditional Statements :
    if, else, else if, switch, break
These are the keywords . Keywords are those which have a fixed meaning in java, we cannot make it a variable name or make any other meaning of it .
    We use the conditional statements when we need an stoppage over something .
Break is used when we need to get out of the conditional statements . 
Switch is used to make conditional statements also.


Loops :
    for loop, while loop, do while loop
Loop is the part of the code which we need to execute more than 1 time .
for loop syntax is:
        for(initialization; condition; updation){}
    - If we don't give the condition, it would turn into infinite(never ending) loop which won't stop until the memory is full . We should ignore this .
while loop syntax is:
        while(cond){}
do-while loop syntax is:
        do{statement}while(cond)
The main difference of do-while loop over any other looping statement is that even if the condition satisfies or not it would execute at least once .
It checks the condition after executing once .
    We can also use loops inside loops which are called nested loops .

/// String///

It is a non-primitive data type, and also are immutable .
Length of a  string variable is determined by the .length() function.
To see the character of a specific index we use .charAt() ufnction.
To replace a character in a string we use .replace() function.  - This function won't change the original string but will reflect the changes in the new string.
To take input from the user we write System.in and we write sc.next() to take a input as a string(word) and not a sentence . 

We can get a part of a large string by using the .substring() function.  - Inside the parenthesis there would be a lower limit and a upper limit, the lower limit would be included but upper limit wouldn't. It would be upper limit-1.
If we give only one index value it will be considered as the starting index and it will print the string to the end .  

Concatenation of strings is adding two distinct strings together .
If we use any not defined string in a line then it will delete from the memory as the line execution ends .
To do several operations on string we used some built-in methods like .length to find the string length, .charAt(i) to access the chaarcters in index i etc .

We don't use == to check string equality instead we use .compareTo() function which checks both if one of the strings are larger or smaller or both are equal or not .
It is because strings are objects in java and functioning of objects and variables in memory are different in java .

We can take inputs in java by scanner class for which we need to import java.util.* . It is a package where many codes are written which we would be using in our code .

We can give inputs by 
        Scanner sc = new Scanner(System.in);
        String name = sc.next();
        System.out.println(name);
    - Here next() takes only the first token(word) . To print the full sentence we need to replace next() by nextLine() . There are many more .


//// String Builders ////

This class does the operations of add, delete etc and doesn't take time too . So whenever we need to modify the strings then we use string builder and not string .
Some part of the java code are stored in the form of stack and some are stored in a heap, in case of strings the variable name is stored in a stack and the value is stored in the heap, and the variable would be pointing towards the heap value .
If we modify the strings in the heap it makes another string, that the variable would point at, it will take a specific amount of time which is not good for the user sitting in the system .
String builders resolve the problem by just updating the previous string because of which it is taking less amount of time .

The only difference between string and string builder is that strings are immutable whereas string builders are mutable .
You can do many operations in string builders like you can replace, delete  or append a character .


///Arrays///

List of items of the same type . 
We use new to take a new space inside memory for a non-primitive data type.
To start with array we need to include a package Java.util.Arrays  .

To declare an array we first write the data type of the array and the square bracket then the name we want to give to the array.
There is another way to declare array in which we assign the values along with the declaration .
If we declare an array without the elements java will automatically initialize with null values(0 for int data type ) .
Then new and the length within the square bracket and the data type of the array.
If we try to print the array variable in java, it will give the combination of hash code and class name. 
There is a variable named length by which we can find the length of an array by arrayName.length .
If you don't initialize a variable with any value it will by default initialize itself with null value or 0 for int, false for boolean etc .

When we are looking for the length of a string we need to put the parenthesis after the .length() like this.
Bu when we are checking an array length we don't need to put the parenthesis, it is the array property.
There is a class Arrays in array in which there is a function .sort() which would sort the array in ascending order.

----2D arrays
initialize by the data type and two square brackets one after another.
Memory size of a 2d array depends on the data type of the array you declared .
If we need to find the size of the 2d array the formula is (rows*columns)*datatypesize .

////Casting////

It is to change from one form to another.
If we try to put a int value in a double it is possible but the reverse is not possible.
It can be of two types:
        Implicit - If we are putting a smaller value to a bigger container.
        Explicit - We will put the larger value to a smaller container by changing its data type as long as they are compatible. It will eliminate/truncate the after decimal numbers.

We can change the value of a variable in java.
We can make constants in java by the final keyword and after  declaring that we can't change the value of that variable.

/////Operators/////

There are four types of operators in java:
    Arithmatic operator(+, -, *, /, %(Modulo), Unary operator(++,-- ))
    Relational operator(==, !=, >, <, >=, <=)
    Assignment operator(=, +=, -=, *=, /=, %=)
    Logical operator (&&, ||, !)
    Bitwise operator (&, |, ^, ~, <<, >>)
    Comparision operator

There is a Math class which is used to perform any kind of mathematical concepts. Like finding the minimum or maximum numbers of given numbers.

There is a random function in Math class which returns a random value between 0.0 to 1.0 in the form of long.
The value random returns is always less than 1, so if we typecast it to int, it will always show 0.

Binary, decimal, octal and hexadecimal number systems .

//// Bit Manipulation ////
Bit masking : Manipulation of bits . We would use an additional number which is also known as bit mask .

a) Get Bit
        1) Bit mask : 1 << i (position to get), after this
        2) Operation : AND (If the result is zero - the character is 0 and if the result is a non-zero then the character is 1)
b) Set Bit
        1) Bit mask : 1 << i
        2) Operation : OR
c) Clear Bit
        1) Bit mask : 1 << i
        2) Operation : AND with a NOT
d) Update Bit
        1) For 0: Bit Mask : 1 << i
                Operation : AND with NOT        // set operation
        2) For 0: Bit Mask : 1 << i
                Operation : OR                    // Clear operation

////Time Complexity////
-Relation between input size & Running time(operations) .
Three types:
    - best case
    - average case
    - worst case

////Space Complexity////
-It depends on how much space is a code taking in the memory . Which is how many variables are storing because of that code .

////Recursion////
It is a function or type of iteration which calls itself.
To know recursion we first need to know function and iteration .

Difference between iteration and recursion is that in iteration only one variable creates in the memory but for recursion for every function call there are variable creating .
So if we don't give the base condition after the memory gets filled it will give a stack overflow error after which the code won't work .
